import random
import model
import t2_mandani_inference
import streamlit as st
import pandas as pd
import t2_fuzzifier
import t2_plot
import t2_model_of_words
from model import input_lvs


def main():
    st.sidebar.title("–ó–∞–ø–∏—Ç–∞–Ω–Ω—è")

    gender = st.sidebar.selectbox("1. –Ø–∫–∞ —É –≤–∞—Å —Å—Ç–∞—Ç—å?", ("–ß–æ–ª–æ–≤—ñ—á–∞", "–ñ—ñ–Ω–æ—á–∞"))
    age = st.sidebar.number_input(
        "2. –°–∫—ñ–ª—å–∫–∏ –≤–∞–º —Ä–æ–∫—ñ–≤?", min_value=18, max_value=150, step=1, value=30
    )
    height = st.sidebar.number_input(
        "3. –Ø–∫–∏–π —É –≤–∞—Å –∑—Ä—ñ—Å—Ç? (—É —Å–º)", min_value=110, max_value=220, step=1, value=180
    )
    weight = st.sidebar.number_input(
        "4. –Ø–∫–∞ —É –≤–∞—Å –≤–∞–≥–∞?", min_value=40, max_value=120, step=1, value=70
    )
    metric = st.sidebar.selectbox(
        "–ú–µ—Ç—Ä–∏–∫–∞ –¥–ª—è –æ–±—Ä–∞—Ö—É–Ω–∫—É?", ("cog", "fom", "lov", "mom")
    )

    gender = 1 if gender == "–ß–æ–ª–æ–≤—ñ—á–∞" else 0
    age = min(10, t2_fuzzifier.__normalization(age, (18, 100, 1)))
    height = min(10, t2_fuzzifier.__normalization(height, (110, 220, 1)))
    weight = min(10, t2_fuzzifier.__normalization(weight, (40, 120, 1)))

    if not "U" in model.input_lvs[0].keys():
        t2_mandani_inference.preprocessing(model.input_lvs, model.output_lv)

    val, word, x, fp1, EK4 = t2_mandani_inference.process(
        model.input_lvs,
        model.output_lv,
        model.rule_base,
        [age, weight, height],
        metric,
    )

    title = f"–í–∞—à —ñ–Ω–¥–µ–∫—Å –≤–∞–≥–∏: {val:.2f}"
    if word == "Underweight":
        title += ", –≤–∏ –∑–∞–Ω–∞–¥—Ç–æ —Ö—É–¥–∏–π"
    elif word == "Normal":
        title += ", —É –≤–∞—Å –Ω–æ—Ä–º–∞–ª—å–Ω–∞ –≤–∞–≥–∞ üòé"
    elif word == "Overweight":
        title += ", —É –≤–∞—Å —î –∑–∞–π–≤–∞ –≤–∞–≥–∞"
    elif word == "Obese":
        title += ", —É –≤–∞—Å –æ–∂–∏—Ä—ñ–Ω–Ω—è"

    st.title(title)
    col1, col2 = st.columns(2)
    with col1:
        t2_plot.draw_t2_fuzzy_set(x, *EK4)
    with col2:
        t2_plot.draw_t_1_fuzzy_area(x, fp1)

    t2_plot.draw_words_model(model.output_lv)
    t2_plot.draw_words_model(model.input_lvs[0])


if __name__ == "__main__":
    main()
